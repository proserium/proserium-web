/*
 * build-java.gradle
 *
 * Copyright by proserium, all rights reserved.
 * MIT License: https://mit-license.org
 */

apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'checkstyle'

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
      tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
      }
    }
}


/***************************************************************************************
 * Jar
 ***************************************************************************************/
jar{
    // include license file
	into 'META-INF', {
		from 'LICENSE.txt'
	}

    // define proper manifest
    manifest {
	def dateTimestamp = new java.text.SimpleDateFormat("dd.MM.yyyy").format(new Date())

        attributes 'Specification-Title'   : rootProject.name,
		           'Specification-Version' : project.version,
		           'Implementation-Title'  : rootProject.name,
        	       'Implementation-Version': project.version + ' / ' + dateTimestamp,
                   'Built-By'              : System.properties['user.name'],
                   'Build-Timestamp'       : new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                   'Created-By'            : "Gradle ${gradle.gradleVersion}",
                   'Build-Jdk'             : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                   'Build-OS'              : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
    }
}


/***************************************************************************************
 * Sources
 ***************************************************************************************/
task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveAppendix = 'sources'
}


/***************************************************************************************
 * Javadoc
 ***************************************************************************************/
task javadocJar(type: Jar) {
    from javadoc
    archiveAppendix = 'javadoc'
}


/***************************************************************************************
 * Artefacts
 ***************************************************************************************/
artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}
